clear;
close all;
np=58;
%average landmark positions
num=[121.806288847908,229.889015478914;151.286063798839,230.244392948549;96.9762721414530,268.811706229708;126.082174632477,255.378619098425;136.628240443922,258.498193119184;147.500590221395,255.616343057027;175.167365832797,268.703420074134;149.162698240004,283.515571732374;123.538280860057,283.316751573451;68.1223209799350,174.389736397628;89.5754388449790,164.858402153764;110.268696032633,174.488501303010;89.8781571865340,179.183272770824;161.307257313939,175.359874499624;181.813299584059,164.838678471877;202.866545164355,175.165858125379;182.140017612159,179.250403922976;37.2889496008500,174.214955878691;37.9882581259887,217.141483517378;42.9458744015501,251.690279240828;53.7942018028700,285.314477372387;72.5210877639865,309.097312425385;97.0028979035317,327.539870958972;135.127605488986,336.243020689102;176.981866139239,325.822823999902;202.714867599183,302.539766536478;220.761516144183,268.730917906374;227.961952847210,232.607443144093;230.356046372917,195.934450238339;229.205962906583,173.558749224018;55.1319801212780,153.353000466879;73.4758699336921,140.468343364377;107.076066898949,142.783258542434;115.681635529347,153.400151939173;155.109774792031,154.447963969138;162.153604365859,143.702212834141;196.701567479335,139.788342216138;213.371727261171,151.368028200814;122.523606016498,179.623545382894;120.582553926553,201.319111577588;108.727301662662,212.896011179715;108.514840116632,235.869529114779;163.807620086345,236.021210625970;163.347043727620,212.256324039636;151.643144468853,201.260520103444;149.845049242458,179.446383934843;133.943822035310,64.9056148841150;132.732087943732,0.547862879376879;13.3968709894577,79.2182903299707;250.905009489888,75.1883021887648;14.8865167751942,174.071020402470;250.475757121916,173.006157131873;65.4983220386920,15.1824219870093;200.014732690810,15.7607608655378;67.0278704601246,85.7804071884441;200.586204016811,88.9160878715763;88.9112661647857,169.790023537008;182.088591614965,169.617204682683];


scale=5;
L=[];Y=[];


we=[];


scale=5;
L=[];Y=[];
fop=[];
%eigenvalues for shape and appearance PCs
latent1(1:25)=[0.0666    0.0490    0.0293    0.0256    0.0150    0.0114    0.0097    0.0081    0.0073    0.0066    0.0056    0.0046    0.0037    0.0035    0.0028    0.0027    0.0022    0.0019    0.0019    0.0017    0.0015  0.0014    0.0013    0.0011    0.0010];
latent2(1:25)=[697597.360213127,449364.127024237,331312.689038142,163471.375228699,135960.186204557,143007.494461608,108906.858216593,96326.0805232736,80601.2799408732,83670.0590987008,69795.0111255784,64310.1502909195,56182.0504845636,55349.7956510369,50313.1999783454,46235.5916193655,42229.7141871908,36831.1592537192,37310.4102085565,36194.7248079821,33573.9269076466,31343.4742041314,30546.7291284526,27930.8512751412,28442.1624238881];
c1=imread('c1_template.bmp');
fid=fopen('average_feature.txt','r');
s2=fscanf(fid,'%f ');
fclose(fid);

h=0;
x002=171;
y002=130;
b2(1:x002,1:y002)=85;
for i=1:x002
    for j=1:y002
        if c1(i,j)>0.5
            h=h+1;
            b2(i,j)=s2(np*2+h);
        end
    end
end


fid=fopen('average_feature_high.txt','r');
s20=fscanf(fid,'%f ');
fclose(fid);
h=0;
b4(1:x002*2,1:y002*2)=85;
kp3=imread('c2_template.bmp');
for i=1:size(kp3,1)
    for j=1:size(kp3,2)
        if kp3(i,j)>0.5
            h=h+1;
            if np*2+h<=length(s20)
                b4(i,j)=s20(np*2+h);
            end
        end
    end
end


%read_shape_and_appearance_PCs
fid=fopen('shape_feature.txt','r');
fs=fscanf(fid,'%f ');
fclose(fid);
COEFF1=reshape(fs,116,25);
fid=fopen('app_feature.txt','r');
fs=fscanf(fid,'%f ');
fclose(fid);
COEFF2=reshape(fs,16467,25);

avern=[155.2919  210.8954];
stdn=97.6640;
%generate 2000 random faces from the face space
for io=1:2000
    %average landmark positions
    s2=[-0.138013686868687;0.399286818181818;0.163835944444444;0.402873974747475;-0.392184969696970;0.797867121212121;-0.0941875404040404;0.660272247474748;0.0138011414141414;0.692195747474748;0.125120116161616;0.662668893939394;0.408428388888889;0.796621611111111;0.142187580808081;0.948331505050506;-0.120186146464646;0.946340580808081;-0.687791166666667;-0.168887040404040;-0.468145262626263;-0.266517732323232;-0.256246232323232;-0.167949479797980;-0.465020641414142;-0.119843202020202;0.266348888888889;-0.159116565656566;0.476295707070707;-0.266880984848485;0.691881989898990;-0.161175833333333;0.479666262626263;-0.119317171717172;-1.00350027272727;-0.170622702020202;-0.996264828282829;0.268908989898990;-0.945442424242425;0.622652000000000;-0.834305565656566;0.966917621212121;-0.642515818181818;1.21040189393939;-0.391809621212122;1.39919590909091;-0.00142820202020202;1.48824245959596;0.427107333333334;1.38147481313131;0.690551757575758;1.14303019696970;0.875275676767676;0.796823429292929;0.948939121212121;0.426935616161616;0.973388550505051;0.0514296919191919;0.961573494949495;-0.177677404040404;-0.820838530303030;-0.384263444444445;-0.633034489898990;-0.516224015151516;-0.288991656565656;-0.492579888888889;-0.200859020202020;-0.383886540404040;0.202855050505050;-0.373226787878788;0.274959353535354;-0.483266939393940;0.628695747474748;-0.523402207070707;0.799405015151515;-0.404864742424243;-0.130756914141414;-0.115392176767677;-0.150593782828283;0.106756297979798;-0.271961722222222;0.225315060606061;-0.274096934343435;0.460545707070707;0.292056661616162;0.462002030303030;0.287299131313131;0.218669651515151;0.167441474747475;0.106102000000000;0.148992277777778;-0.117253969696970;-0.0140237525252525;-1.29003095959596;-0.0265435000000000;-1.94900016161616;-1.24830197474747;-1.14326990909091;1.18358212121212;-1.18494910606061;-1.23288333333333;-0.172057318181818;1.17935800000000;-0.183372626262626;-0.714937277777778;-1.79903650000000;0.662402994949495;-1.79335003535354;-0.699152419191919;-1.07617293939394;0.668382318181818;-1.04429975252525;-0.474937257575758;-0.216020686868687;0.479122858585858;-0.217953222222222];
    %generate random feature vectors in the face space
    for ip=1:50
        if ip<=25
            b0(ip)=normrnd(0,latent1(ip)^(0.5));
        else
            b0(ip)=normrnd(0,latent2(ip-25)^(0.5));
        end
    end
    
    %add the shape vectors to the average shape to compute the target shape  
    for ik=1:25
        s2=s2+b0(ik)*COEFF1(1:2*np,ik);
    end
    num02(:,1)=s2(1:2:np*2);
    num02(:,2)=s2(2:2:np*2);
    
    for tt=1:np
        num2(tt,1:2)=num02(tt,:)*stdn+avern;
    end
    
    npo=size(num,1);
    L(1:npo,1:npo)=0;
    for i=1:npo
        for j=1:npo
            if i==j
                L(i,j)=0;
            else
                dir=num(i,:)-num(j,:);
                r2=sum(dir.*dir)/(scale^2);
                L(i,j)=r2*log(r2)/log(10);
            end
        end
    end
    
    L(1:npo,npo+1)=1;
    L(1:npo,npo+2)=num(:,1);
    L(1:npo,npo+3)=num(:,2);
    L(npo+1,1:npo)=1;
    L(npo+2,1:npo)=num(:,1)';
    L(npo+3,1:npo)=num(:,2)';
    Y(1:npo,1:2)=num2(:,1:2); Y(npo+1:npo+3,1:2)=0;
    num3=num2;
    W=(L^(-1))*Y;
    %load average appearance descriptor (shape-free appearance image)
    fid=fopen('average_feature.txt','r');
    s2=fscanf(fid,'%f ');
    fclose(fid);
    s2o=s2;
    % add the appearance vector to the average appearance to compute the target appearance
    for ik=1:25
        s2=b0(ik+25)*double(COEFF2(:,ik))+s2;
    end
    s2=s2-s2o;
    h=0;
    b2=[];
    b2(1:x002,1:y002)=0;
    for i=1:x002
        for j=1:y002
            if c1(i,j)>0.5
                h=h+1;
                b2(i,j)=s2(np*2+h);
            end
        end
    end
    b3= imresize(b2,size(b2)*2,'bilinear');
    b3=b3(1:size(b4,1),1:size(b4,2));
    b2=b3+b4;
    % morph the target appearance image to the target shape 
    kp=b2;
    x0=size(kp,2);
    y0=size(kp,1);
    Xa(1:x0,1:y0)=0;
    Ya(1:x0,1:y0)=0;
    for i=1:x0
        Xa(i,:)=i;
    end
    for j=1:y0
        Ya(:,j)=j;
    end
    xo=W(npo+1,1)+Xa*W(npo+2,1)+Ya*W(npo+3,1);
    yo=W(npo+1,2)+Xa*W(npo+2,2)+Ya*W(npo+3,2);
    for i=1:npo
        
        r2=((Xa-num(i,1)).*(Xa-num(i,1))+(Ya-num(i,2)).*(Ya-num(i,2)))/(scale^2);
        xo=xo+W(i,1)*(r2.*log(r2))/log(10);
        yo=yo+W(i,2)*(r2.*log(r2))/log(10);
    end
    im12=[];

    for x=1:x0
        
        for y=1:y0
            if abs(kp(y,x)-85)>0.0001
                im12(max(1,round(yo(x,y))),max(1,round(xo(x,y))))=kp(y,x);
            end
        end
    end

    
    for x=1:size(im12,1)
        
        for y=1:size(im12,2)
            if abs(im12(x,y))<0.0001
                im12(x,y)=85;
            end
        end
    end
    
    
    stax=1;
    st=0;
    endx=1;
    for i=1:size(im12,1)
        
        if mean(im12(i,:)==85)<1
            if st==0
                st=1;
                stax=i;
            end
            endx=i;
        end
    end
    
    
    stay=1;
    st=0;
    endy=1;
    for j=1:size(im12,2)
        
        if mean(im12(:,j)==85)<1
            if st==0
                st=1;
                stay=j;
            end
            endy=j;
        end
    end
    im12=im12(stax:endx,stay:endy);
    num3(:,1)=num3(:,1)-stay+1;
    num3(:,2)=num3(:,2)-stax+1;
    %fill in the gaps caused by morphing
    shift=[1 1; 1 -1; 1 0; 0 1; 0 -1; -1 1; -1 0; -1 -1];
    smwin=2;
    width=0.5;
    x01=size(im12,1);
    y01=size(im12,2);
    im5=im12;
    for i=1:x01
        
        for j=1:y01
            if abs(im12(i,j,:)-85)<0.0001
                ak(1:8)=0;
                for dir=1:8
                    ak(dir)=1;
                    for kk=1:6
                        ioo=i+shift(dir,1)*(kk);
                        joo=j+shift(dir,2)*(kk);
                        if ioo>0&&ioo<=x01&&joo>0&&joo<=y01
                            ak(dir)=ak(dir)*(abs(im12(ioo,joo,:)-85)<0.0001);
                        end
                    end
                end
                
                if sum(ak)<=2
                    ww=0;
                    ss=0;
                    for i1=max(i-smwin,1):min(i+smwin,x01)
                        for j1=max(j-smwin,1):min(j+smwin,y01)
                            w1=2.7183^(-((i1-i)^2+(j1-j)^2)/(width^2));
                            if i1<x01+1&&j1<y01+1&&i1>0&&j1>0&&abs(im5(i1,j1)-85)>0.0001
                                ww=ww+w1;
                                ss=ss+w1*im5(i1,j1);
                                
                            end
                        end
                    end
                    if ww~=0
                        im12(i,j)=ss/ww;
                    end
                end
            end
        end
    end
    im5=im12;
    
    stax=1;
    st=0;
    endx=1;
    for i=1:x01
        
        if mean(abs(im5(i,:)-85)<1)<=0.98
            if st==0
                st=1;
                stax=i;
            end
            endx=i;
        end
    end
    
    
    stay=1;
    st=0;
    endy=1;
    for j=1:y01
        
        if mean(abs(im5(:,j)-85)<1)<=0.98
            if st==0
                st=1;
                stay=j;
            end
            endy=j;
        end
    end
    im5=im5(stax:endx,stay:endy);
    
    num3(:,1)=num3(:,1)-stay+1;
    num3(:,2)=num3(:,2)-stax+1;
    
    %output the image
    imwrite(im5/255,[num2str(io),'.tiff']);
    %output the 50-d feature vectors
    fid2 = fopen([num2str(io),'.txt'], 'w');
    for i=1:length(b0)
        fprintf(fid2,'%f ',b0(i));
    end
    fclose(fid2);
    
end




